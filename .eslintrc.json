{
  // Configuration for JavaScript files
  "extends": [
    "eslint:recommended",
    "next/core-web-vitals", // Needed to avoid warning in next.js build: 'The Next.js plugin was not detected in your ESLint configuration'
    "plugin:@typescript-eslint/recommended",
    "plugin:jsx-a11y/strict",
    "plugin:@tanstack/eslint-plugin-query/recommended",
    "plugin:prettier/recommended"
  ],
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "printWidth": 120,
        "endOfLine": "auto"
      }
    ] // Avoid conflict rule between Prettier and Airbnb Eslint
  },
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": ["**/*.ts", "**/*.tsx", "**/*.mts"],
      "plugins": [
        "@typescript-eslint",
        "unused-imports",
        "tailwindcss",
        "simple-import-sort"
      ],
      "extends": [
        "plugin:tailwindcss/recommended",
        "next/core-web-vitals",
        "plugin:prettier/recommended"
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "import/extensions": "off", // Avoid missing file extension errors, TypeScript already provides a similar feature
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
        "import/order": "off", // Avoid conflict rule between `eslint-plugin-import` and `eslint-plugin-simple-import-sort`
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "error",
          { "argsIgnorePattern": "^_" }
        ]
      }
    },
    // Configuration for testing
    {
      "files": ["**/*.test.ts", "**/*.test.tsx"],
      "plugins": ["vitest", "jest-formatting", "testing-library"],
      "extends": [
        "plugin:vitest/legacy-recommended",
        "plugin:jest-formatting/recommended",
        "plugin:testing-library/react"
      ]
    },
    // Configuration for e2e testing (Playwright)
    {
      "files": ["**/*.spec.ts"],
      "extends": ["plugin:playwright/recommended"]
    }
    // // Configuration for Storybook
    // {
    //   "files": ["*.stories.*"],
    //   "extends": ["plugin:storybook/recommended"],
    //   "rules": {
    //     "import/no-extraneous-dependencies": [
    //       "error",
    //       {
    //         "devDependencies": true
    //       }
    //     ]
    //   }
    // }
  ]
}
